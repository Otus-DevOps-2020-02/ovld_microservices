stages:
  - build
  - test
  - review
  - stage
  - production

build:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  before_script:
    - docker info
  script:
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker build -t ${DOCKER_LOGIN}/otus-reddit-gitlab:${CI_COMMIT_SHORT_SHA} ./reddit
    - docker push ${DOCKER_LOGIN}/otus-reddit-gitlab:${CI_COMMIT_SHORT_SHA}

test_unit_job:
  stage: test
  image: ruby:2.4.2
  variables:
    DATABASE_URL: 'mongodb://mongo:27017'
  services:
    - mongo:latest
  before_script:
    - cd reddit
    - bundle install
  script:
    - echo 'Testing 1'
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  image: docker:19.03.1
  before_script:
    - docker info
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - pip install docker-compose
    - docker-compose --version
    - docker-compose -f ./reddit/docker-compose.yml down
  script:
    - docker-compose -f ./reddit/docker-compose.yml up -d
  environment:
    name: dev
    url: http://dev.example.com

branch_review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy STAGE'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy PROD'
  environment:
    name: production
    url: https://beta.example.com
